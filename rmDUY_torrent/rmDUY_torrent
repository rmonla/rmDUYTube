#!/usr/bin/python

import os
from oauth2client.tools import argparser


def runApp(args):
	verArchsPostulantes(args.tfile)

def verArchsPostulantes(file):
	txtCMD = "aria2c -S " + file + " | grep '|./'"
	resp   = os.popen(txtCMD).read()
	print(resp)



if __name__ == '__main__':
	# Argumentos.
	argparser.add_argument("--tfile", required=True, help="Archivo .torrent para la descarga.")

	# Instancio Argumentos.
	args = argparser.parse_args()

	# Verifico argumentos requeridos.
	if not os.path.exists(args.tfile):
		exit("Especifique un archivo valido para el parametro --tfile ")

	# Ejecuto el programa.
	runApp(args)




	# txtCMD = 'aria2c --select-file=1 --seed-time=0 ' + file
	# pass

	# youtube = get_authenticated_service(args)
	# try:
	# 	initialize_upload(youtube, args)
	# except HttpError, e:
	# try:
	# 	initialize_upload(youtube, args)
	# except HttpError, e:
	# 	print "An HTTP error %d occurred:\n%s" % (e.resp.status, e.content)
	# 	print "An HTTP error %d occurred:\n%s" % (e.resp.status, e.content)




	# argparser.add_argument("--title", help="Video title", default="Test Title")
	# argparser.add_argument("--description", help="Video description",
	# default="Test Description")
	# argparser.add_argument("--category", default="27",
	# help="Numeric video category. " +
	#   "See https://developers.google.com/youtube/v3/docs/videoCategories/list")
	# argparser.add_argument("--keywords", help="Video keywords, comma separated",
	# default="")
	# argparser.add_argument("--privacyStatus", choices=VALID_PRIVACY_STATUSES,
	# default=VALID_PRIVACY_STATUSES[0], help="Video privacy status.")
